services:
  Core.MongoConfig:
    factory:
      class: ../../../../../contexts/core/_shared/infrastructure/persistence/mongo/MongoConfigFactory
      method: 'createConfig'

  Core.ConnectionManager:
    factory:
      class: ../../../../../contexts/_shared/infrastructure/persistence/mongo/MongoClientFactory
      method: 'createClient'
    arguments: ['core', '@Core.MongoConfig']

  Core.groups.domain.GroupRepository:
    class: ../../../../../contexts/core/groups/infrastructure/persistence/MongoGroupRepository
    arguments: ['@Core.ConnectionManager']

  Core.groups.domain.CreateRoulette:
    class: ../../../../../contexts/core/groups/infrastructure/CreateRouletteApplication
    arguments: ['@Core.roulettes.application.CreateRouletteFromGroup']

  Core.groups.application.GetGroups:
    class: ../../../../../contexts/core/groups/application/GetGroups
    arguments: ['@Core.groups.domain.GroupRepository']

  Core.groups.application.GetSingleGroup:
    class: ../../../../../contexts/core/groups/application/GetSingleGroup
    arguments: ['@Core.groups.domain.GroupRepository']

  Core.groups.application.CreateGroup:
    class: ../../../../../contexts/core/groups/application/CreateGroup
    arguments: ['@Core.groups.domain.GroupRepository', '@Core.groups.domain.CreateRoulette']

  Core.groups.application.DeleteGroup:
    class: ../../../../../contexts/core/groups/application/DeleteGroup
    arguments: ['@Core.groups.domain.GroupRepository']
