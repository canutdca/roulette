services:
  Core.MongoConfig:
    factory:
      class: ../../../../../contexts/core/_shared/infrastructure/persistence/mongo/MongoConfigFactory
      method: 'createConfig'

  Core.ConnectionManager:
    factory:
      class: ../../../../../contexts/_shared/infrastructure/persistence/mongo/MongoClientFactory
      method: 'createClient'
    arguments: ['core', '@Core.MongoConfig']

  Core.groups.domain.GroupRepository:
    class: ../../../../../contexts/core/groups/infrastructure/persistence/MongoGroupRepository
    arguments: ['@Core.ConnectionManager']

  Core.groups.domain.CreateCeremony:
    class: ../../../../../contexts/core/groups/infrastructure/CreateCeremonyApplication
    arguments: ['@Core.ceremonies.application.CreateCeremonyFromGroup']

  Core.groups.domain.DeleteCeremony:
    class: ../../../../../contexts/core/groups/infrastructure/DeleteCeremonyApplication
    arguments: ['@Core.ceremonies.application.DeleteSingleCeremony']

  Core.groups.application.GetGroups:
    class: ../../../../../contexts/core/groups/application/GetGroups
    arguments: ['@Core.groups.domain.GroupRepository']

  Core.groups.application.GetSingleGroup:
    class: ../../../../../contexts/core/groups/application/GetSingleGroup
    arguments: ['@Core.groups.domain.GroupRepository']

  Core.groups.application.CreateGroup:
    class: ../../../../../contexts/core/groups/application/CreateGroup
    arguments: [
      '@Core.groups.domain.GroupRepository',
      '@Core.groups.domain.CreateCeremony',
      '@Core.groups.domain.DeleteCeremony'
    ]

  Core.groups.application.DeleteSingleGroup:
    class: ../../../../../contexts/core/groups/application/DeleteSingleGroup
    arguments: ['@Core.groups.domain.GroupRepository']

  Core.groups.application.DeleteGroups:
    class: ../../../../../contexts/core/groups/application/DeleteGroups
    arguments: ['@Core.groups.domain.GroupRepository']
